---
import Button from './Button.astro';

export interface Props {
  title: string;
  subtitle?: string;
  description: string;
  primaryCTA: {
    text: string;
    href: string;
  };
  secondaryCTA?: {
    text: string;
    href: string;
  };
  stats?: Array<{
    value: string;
    label: string;
  }>;
  badge?: string;
  heroImage?: string;
}

const {
  title,
  subtitle,
  description,
  primaryCTA,
  secondaryCTA,
  stats,
  badge,
  heroImage
} = Astro.props;
---

<section class="relative py-16 bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 min-h-screen flex flex-col justify-center overflow-hidden">
  <!-- Background Grid Pattern -->
  <div class="absolute inset-0 opacity-10">
    <div class="absolute inset-0" style="background-image: radial-gradient(circle at 1px 1px, rgba(255,255,255,0.3) 1px, transparent 0); background-size: 20px 20px;"></div>
  </div>
  
  <!-- Floating Minecraft Elements -->
  <div class="absolute inset-0 pointer-events-none">
    <!-- Minecraft Blocks -->
    <div class="absolute top-20 left-10 w-8 h-8 bg-green-500/20 rounded-sm animate-float" style="animation-delay: 0s;"></div>
    <div class="absolute top-32 right-16 w-6 h-6 bg-brown-500/20 rounded-sm animate-float" style="animation-delay: 2s;"></div>
    <div class="absolute bottom-40 left-20 w-10 h-10 bg-blue-500/20 rounded-sm animate-float" style="animation-delay: 4s;"></div>
    <div class="absolute top-1/3 right-8 w-7 h-7 bg-yellow-500/20 rounded-sm animate-float" style="animation-delay: 1s;"></div>
    <div class="absolute bottom-1/3 right-1/4 w-5 h-5 bg-red-500/20 rounded-sm animate-float" style="animation-delay: 3s;"></div>
    
    <!-- Hearts -->
    <div class="absolute top-1/4 left-1/4 text-red-400/30 animate-float" style="animation-delay: 1.5s;">
      <svg class="w-6 h-6" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"></path>
      </svg>
    </div>
    <div class="absolute bottom-1/4 right-1/3 text-pink-400/30 animate-float" style="animation-delay: 2.5s;">
      <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
        <path fill-rule="evenodd" d="M3.172 5.172a4 4 0 015.656 0L10 6.343l1.172-1.171a4 4 0 115.656 5.656L10 17.657l-6.828-6.829a4 4 0 010-5.656z" clip-rule="evenodd"></path>
      </svg>
    </div>
    
    <!-- Stars -->
    <div class="absolute top-16 right-1/3 text-yellow-400/40 animate-pulse" style="animation-delay: 0.5s;">
      <svg class="w-4 h-4" fill="currentColor" viewBox="0 0 20 20">
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
      </svg>
    </div>
    <div class="absolute bottom-20 left-1/3 text-blue-400/40 animate-pulse" style="animation-delay: 3.5s;">
      <svg class="w-3 h-3" fill="currentColor" viewBox="0 0 20 20">
        <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
      </svg>
    </div>
  </div>
  
  <div class="container mx-auto px-4 max-w-xl text-center relative z-10">
    
    <!-- Logo -->
    {heroImage && (
      <div class="mb-8">
        <img 
          src={heroImage} 
          alt={title}
          class="w-32 h-32 mx-auto rounded-lg shadow-lg object-cover"
        />
      </div>
    )}
    
    <!-- Title -->
    <h1 class="text-4xl md:text-5xl font-heading font-black mb-6">
      <span class="bg-gradient-to-r from-yellow-400 via-orange-500 to-red-500 bg-clip-text text-transparent">
        {title}
      </span>
    </h1>
    
    <!-- Welcome Message -->
    <p class="text-lg text-white/90 mb-8 leading-relaxed">
      {subtitle}
    </p>
    
    <!-- Version -->
    {stats && stats.length > 0 && (
      <div class="mb-8">
        <div class="inline-flex items-center space-x-6 bg-white/10 backdrop-blur-sm rounded-full px-6 py-3 border border-white/20">
          {stats.slice(0, 2).map((stat) => (
            <div class="text-center">
              <div class="text-lg font-bold text-yellow-400">{stat.value}</div>
              <div class="text-xs text-white/70 uppercase tracking-wide">{stat.label}</div>
            </div>
          ))}
        </div>
      </div>
    )}
    
    <!-- Download Button -->
    <div class="mb-12">
      <Button
        href={primaryCTA.href}
        variant="primary"
        size="xl"
        class="shadow-lg hover:shadow-xl px-8 py-4"
      >
        <svg class="w-5 h-5" fill="currentColor" viewBox="0 0 20 20">
          <path fill-rule="evenodd" d="M3 17a1 1 0 011-1h12a1 1 0 110 2H4a1 1 0 01-1-1zm3.293-7.707a1 1 0 011.414 0L9 10.586V3a1 1 0 112 0v7.586l1.293-1.293a1 1 0 111.414 1.414l-3 3a1 1 0 01-1.414 0l-3-3a1 1 0 010-1.414z" clip-rule="evenodd"></path>
        </svg>
        {primaryCTA.text}
      </Button>
      
      {secondaryCTA && (
        <div class="mt-4">
          <Button
            href={secondaryCTA.href}
            variant="outline"
            size="lg"
            class="px-6 py-3"
          >
            {secondaryCTA.text}
          </Button>
        </div>
      )}
    </div>
    
  </div>
  
  <!-- Scroll Indicator -->
  <div class="absolute bottom-8 left-1/2 transform -translate-x-1/2 animate-bounce">
    <div class="w-6 h-10 border-2 border-white/30 rounded-full flex justify-center">
      <div class="w-1 h-3 bg-white/50 rounded-full mt-2 animate-pulse"></div>
    </div>
  </div>
</section>

<style>
  @keyframes float {
    0%, 100% {
      transform: translateY(0px);
    }
    50% {
      transform: translateY(-10px);
    }
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  /* Stagger the floating animations */
  .animate-float:nth-child(1) { animation-duration: 4s; }
  .animate-float:nth-child(2) { animation-duration: 5s; }
  .animate-float:nth-child(3) { animation-duration: 6s; }
  .animate-float:nth-child(4) { animation-duration: 4.5s; }
  .animate-float:nth-child(5) { animation-duration: 5.5s; }
</style>